/*
 *
 * Generated by prabhakar
 */
package com.gotracrat.managelocation.repository;

import com.gotracrat.managelocation.dto.WarehouseTagDTO;
import com.gotracrat.managelocation.entity.Item;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.jpa.repository.query.Procedure;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import javax.persistence.EntityManager;
import javax.transaction.Transactional;

import java.util.Date;
import java.util.List;

/**
 * Jpa repository for Item.
 *
 * @author prabhakar
 */

@Repository
public interface ItemRepository extends JpaRepository<Item, Integer>, JpaSpecificationExecutor<Item> {

    public static final EntityManager en = null;

    public List<Item> findByTag(String tag);

    public List<Item> findByTagAndLocationLocationid(String tag, int locationId);

    public List<Item> findByTagAndLocationLocationidAndStatusStatusid(String tag, int locationId, int statusId);

    @Modifying
    @Query(value = "update Item I set I.defaultimageattachmentid = :attachmentId where I.itemid = :itemId")
    public int setDefaultAttachmentId(@Param("attachmentId") Integer attachmentId, @Param("itemId") Integer itemId);

    @Query("Select c.tag from Item c where c.tag like %:tagname%")
    public List<String> findByAsList(@Param("tagname") String tagname, Pageable pageable);

    public List<Item> findTop10ByLocationCompanyCompanyidAndTagLike(Integer companyId, String tag);

    @Transactional
    @Procedure(procedureName = "spItemDelete")
    void deleteItem(@Param("ItemId") Integer itemId);

    @Procedure(name = "spItemSearch")
    public List<Object[]> itemAdvSearch(@Param("CompanyID") Integer companyID, @Param("Name") String name,
                                        @Param("TagNumber") String tagNumber, @Param("SerialNumber") String serialNumber,
                                        @Param("ModelNumber") String modelNumber, @Param("LocationName") String locationName,
                                        @Param("StatusID") Integer statusID, @Param("LocationID") Integer locationID,
                                        @Param("TypeID") Integer typeID, @Param("Attributes") String attributes,
                                        @Param("MaxHitCount") Integer maxHitCount);

    @Query("Select c.tag from Item c where c.tag =:tagname and c.itemTypeId =  :typeid")
    public List<String> findByAsList(@Param("tagname") String tagname, @Param("typeid") Integer typeid,
                                     Pageable pageable);

    @Query(value = "Select  new  com.gotracrat.managelocation.dto.WarehouseTagDTO"
            + "(r.actualCompletion,r.repairVendorName) "
            + "from VwRepairLog r where r.itemId = ?1 and  r.complete=1 and r.isActive=1 order by r.actualCompletion desc")
    public List<WarehouseTagDTO> getWarehouseTag(Integer itemId, Pageable pageable);
    
    @Query("Select i.inserviceon from Item i where i.itemid =:itemId")
    public Date getInserviceOn(@Param("itemId") Integer itemId);

}
