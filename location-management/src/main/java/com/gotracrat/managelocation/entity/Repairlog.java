/*
 * Created on 2018-11-29 ( Date ISO 2018-11-29 - Time 19:27:59 )
 * Generated by Prabhakar
*/
package com.gotracrat.managelocation.entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.*;

/**
 * Persistent class for Repairlog entity stored in table RepairLog. This class
 * is a "record entity" without JPA links.
 * 
 * @author Prabhakar
 */
@Entity
@Table(name = "RepairLog", schema = "dbo")
public class Repairlog implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
	// ----------------------------------------------------------------------
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "RepairLogId", nullable = false)
	private Integer repairlogid;
	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------
	@Column(name = "ItemId", nullable = false)
	private Integer itemid;
	@Column(name = "ItemType", length = 255)
	private String itemtype;
	@Column(name = "RFQNumber", length = 50)
	private String rfqnumber;
	@Column(name = "PONumber", length = 50)
	private String ponumber;
	@Column(name = "RepairVendorNumber")
	private String repairvendornumber;
	@Column(name = "JobNumber")
	private String jobnumber;
	@Column(name = "RepairJobStatus")
	private String repairjobstatus;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DateInitiated", nullable = false)
	private Date dateinitiated;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DateAcknowledged")
	private Date dateacknowledged;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EstimatedCompletion")
	private Date estimatedcompletion;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ActualCompletion")
	private Date actualcompletion;
	@Column(name = "RepairCost")
	private BigDecimal repaircost;
	@Column(name = "IsWarranty")
	private Boolean iswarranty;
	@Column(name = "WarrantyType", length = 50)
	private String warrantytype;
	@Column(name = "FailureType", length = 255)
	private String failuretype;
	@Column(name = "FailureCause", length = 255)
	private String failurecause;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FailureDate")
	private Date failuredate;
	@Column(name = "TransferLogID")
	private Integer transferlogid;
	@Column(name = "RepairNotes", length = 5000)
	private String repairnotes;
	@Column(name = "RepairLocationID", nullable = false)
	private Integer repairlocationid;
	@Column(name = "RepairCompanyID")
	private Integer repaircompanyid;
	@Column(name = "Title", length = 255)
	private String title;
	@Column(name = "Complete")
	private Boolean complete;
	@Column(name = "CompletedBy")
	private String completedby;
	@Column (name = "Is_Active")
	private Boolean isactive;

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public Repairlog() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE KEY FIELD
	// ----------------------------------------------------------------------
	public void setRepairlogid(Integer repairlogid) {
		this.repairlogid = repairlogid;
	}

	public Integer getRepairlogid() {
		return this.repairlogid;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : ItemId (int)
	public void setItemid(Integer itemid) {
		this.itemid = itemid;
	}

	public Integer getItemid() {
		return this.itemid;
	}

	// --- DATABASE MAPPING : ItemType (varchar)
	public void setItemtype(String itemtype) {
		this.itemtype = itemtype;
	}

	public String getItemtype() {
		return this.itemtype;
	}

	// --- DATABASE MAPPING : RFQNumber (varchar)
	public void setRfqnumber(String rfqnumber) {
		this.rfqnumber = rfqnumber;
	}

	public String getRfqnumber() {
		return this.rfqnumber;
	}

	// --- DATABASE MAPPING : PONumber (varchar)
	public void setPonumber(String ponumber) {
		this.ponumber = ponumber;
	}

	public String getPonumber() {
		return this.ponumber;
	}

	// --- DATABASE MAPPING : RepairVendorNumber (nvarchar)
	public void setRepairvendornumber(String repairvendornumber) {
		this.repairvendornumber = repairvendornumber;
	}

	public String getRepairvendornumber() {
		return this.repairvendornumber;
	}

	// --- DATABASE MAPPING : JobNumber (nvarchar)
	public void setJobnumber(String jobnumber) {
		this.jobnumber = jobnumber;
	}

	public String getJobnumber() {
		return this.jobnumber;
	}

	// --- DATABASE MAPPING : RepairJobStatus (nvarchar)
	public void setRepairjobstatus(String repairjobstatus) {
		this.repairjobstatus = repairjobstatus;
	}

	public String getRepairjobstatus() {
		return this.repairjobstatus;
	}

	// --- DATABASE MAPPING : DateInitiated (datetime)
	public void setDateinitiated(Date dateinitiated) {
		this.dateinitiated = dateinitiated;
	}

	public Date getDateinitiated() {
		return this.dateinitiated;
	}

	// --- DATABASE MAPPING : DateAcknowledged (datetime)
	public void setDateacknowledged(Date dateacknowledged) {
		this.dateacknowledged = dateacknowledged;
	}

	public Date getDateacknowledged() {
		return this.dateacknowledged;
	}

	// --- DATABASE MAPPING : EstimatedCompletion (datetime)
	public void setEstimatedcompletion(Date estimatedcompletion) {
		this.estimatedcompletion = estimatedcompletion;
	}

	public Date getEstimatedcompletion() {
		return this.estimatedcompletion;
	}

	// --- DATABASE MAPPING : ActualCompletion (datetime)
	public void setActualcompletion(Date actualcompletion) {
		this.actualcompletion = actualcompletion;
	}

	public Date getActualcompletion() {
		return this.actualcompletion;
	}

	// --- DATABASE MAPPING : RepairCost (money)
	public void setRepaircost(BigDecimal repaircost) {
		this.repaircost = repaircost;
	}

	public BigDecimal getRepaircost() {
		return this.repaircost;
	}

	// --- DATABASE MAPPING : IsWarranty (bit)
	public void setIswarranty(Boolean iswarranty) {
		this.iswarranty = iswarranty;
	}

	public Boolean getIswarranty() {
		return this.iswarranty;
	}

	// --- DATABASE MAPPING : WarrantyType (varchar)
	public void setWarrantytype(String warrantytype) {
		this.warrantytype = warrantytype;
	}

	public String getWarrantytype() {
		return this.warrantytype;
	}

	// --- DATABASE MAPPING : FailureType (varchar)
	public void setFailuretype(String failuretype) {
		this.failuretype = failuretype;
	}

	public String getFailuretype() {
		return this.failuretype;
	}

	// --- DATABASE MAPPING : FailureCause (varchar)
	public void setFailurecause(String failurecause) {
		this.failurecause = failurecause;
	}

	public String getFailurecause() {
		return this.failurecause;
	}

	// --- DATABASE MAPPING : FailureDate (datetime)
	public void setFailuredate(Date failuredate) {
		this.failuredate = failuredate;
	}

	public Date getFailuredate() {
		return this.failuredate;
	}

	// --- DATABASE MAPPING : TransferLogID (int)
	public void setTransferlogid(Integer transferlogid) {
		this.transferlogid = transferlogid;
	}

	public Integer getTransferlogid() {
		return this.transferlogid;
	}

	// --- DATABASE MAPPING : RepairNotes (varchar)
	public void setRepairnotes(String repairnotes) {
		this.repairnotes = repairnotes;
	}

	public String getRepairnotes() {
		return this.repairnotes;
	}

	// --- DATABASE MAPPING : RepairLocationID (int)
	public void setRepairlocationid(Integer repairlocationid) {
		this.repairlocationid = repairlocationid;
	}

	public Integer getRepairlocationid() {
		return this.repairlocationid;
	}

	// --- DATABASE MAPPING : RepairCompanyID (int)
	public void setRepaircompanyid(Integer repaircompanyid) {
		this.repaircompanyid = repaircompanyid;
	}

	public Integer getRepaircompanyid() {
		return this.repaircompanyid;
	}

	// --- DATABASE MAPPING : Title (varchar)
	public void setTitle(String title) {
		this.title = title;
	}

	public String getTitle() {
		return this.title;
	}

	// --- DATABASE MAPPING : Complete (bit)
	public void setComplete(Boolean complete) {
		this.complete = complete;
	}

	public Boolean getComplete() {
		return this.complete;
	}

	// --- DATABASE MAPPING : CompletedBy (nvarchar)
	public void setCompletedby(String completedby) {
		this.completedby = completedby;
	}

	public String getCompletedby() {
		return this.completedby;
	}

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(repairlogid);
		sb.append(itemid);
		sb.append("|");
		sb.append(itemtype);
		sb.append("|");
		sb.append(rfqnumber);
		sb.append("|");
		sb.append(ponumber);
		sb.append("|");
		sb.append(repairvendornumber);
		sb.append("|");
		sb.append(jobnumber);
		sb.append("|");
		sb.append(repairjobstatus);
		sb.append("|");
		sb.append(dateinitiated);
		sb.append("|");
		sb.append(dateacknowledged);
		sb.append("|");
		sb.append(estimatedcompletion);
		sb.append("|");
		sb.append(actualcompletion);
		sb.append("|");
		sb.append(repaircost);
		sb.append("|");
		sb.append(iswarranty);
		sb.append("|");
		sb.append(warrantytype);
		sb.append("|");
		sb.append(failuretype);
		sb.append("|");
		sb.append(failurecause);
		sb.append("|");
		sb.append(failuredate);
		sb.append("|");
		sb.append(transferlogid);
		sb.append("|");
		sb.append(repairnotes);
		sb.append("|");
		sb.append(repairlocationid);
		sb.append("|");
		sb.append(repaircompanyid);
		sb.append("|");
		sb.append(title);
		sb.append("|");
		sb.append(complete);
		sb.append("|");
		sb.append(completedby);
		return sb.toString();
	}

	public Boolean getIsactive() {
		return isactive;
	}

	public void setIsactive(Boolean isactive) {
		this.isactive = isactive;
	}
}