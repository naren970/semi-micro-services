/*
 * Created on 2018-10-27 ( Date ISO 2018-10-27 - Time 19:57:23 )
 * Generated by 
*/
package com.gotracrat.managelocation.entity;

import java.io.Serializable;
import javax.persistence.*;

/**
 * Persistent class for Reportsecurity entity stored in table ReportSecurity.
 * This class is a "record entity" without JPA links.
 * 
 * @author Prabhakar
 */
@Entity
@Table(name = "ReportSecurity", schema = "dbo")
public class Reportsecurity implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
	// ----------------------------------------------------------------------
	@Id
	@Column(name = "ProfileID", nullable = false)
	private Integer profileid;
	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------
	@Column(name = "InServiceSpare", nullable = false)
	private Boolean inservicespare;
	@Column(name = "WarrantyStatus", nullable = false)
	private Boolean warrantystatus;
	@Column(name = "FailureUnderWarranty", nullable = false)
	private Boolean failureunderwarranty;
	@Column(name = "MTBS", nullable = false)
	private Boolean mtbs;
	@Column(name = "RepairCostByVendor", nullable = false)
	private Boolean repaircostbyvendor;
	@Column(name = "RepairCostByLocation", nullable = false)
	private Boolean repaircostbylocation;
	@Column(name = "EquipmentInRepair", nullable = false)
	private Boolean equipmentinrepair;
	@Column(name = "CauseOfFailure", nullable = false)
	private Boolean causeoffailure;
	@Column(name = "CostSavings", nullable = false)
	private Boolean costsavings;
	@Column(name = "RawRepairData", nullable = false)
	private Boolean rawrepairdata;
	@Column(name = "StockLevel", nullable = false)
	private Boolean stocklevel;
	@Column(name = "TransferLog", nullable = false)
	private Boolean transferlog;
	@Column(name = "RepairStatus", nullable = false)
	private Boolean repairstatus;

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public Reportsecurity() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE KEY FIELD
	// ----------------------------------------------------------------------
	public void setProfileid(Integer profileid) {
		this.profileid = profileid;
	}

	public Integer getProfileid() {
		return this.profileid;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : InServiceSpare (bit)
	public void setInservicespare(Boolean inservicespare) {
		this.inservicespare = inservicespare;
	}

	public Boolean getInservicespare() {
		return this.inservicespare;
	}

	// --- DATABASE MAPPING : WarrantyStatus (bit)
	public void setWarrantystatus(Boolean warrantystatus) {
		this.warrantystatus = warrantystatus;
	}

	public Boolean getWarrantystatus() {
		return this.warrantystatus;
	}

	// --- DATABASE MAPPING : FailureUnderWarranty (bit)
	public void setFailureunderwarranty(Boolean failureunderwarranty) {
		this.failureunderwarranty = failureunderwarranty;
	}

	public Boolean getFailureunderwarranty() {
		return this.failureunderwarranty;
	}

	// --- DATABASE MAPPING : MTBS (bit)
	public void setMtbs(Boolean mtbs) {
		this.mtbs = mtbs;
	}

	public Boolean getMtbs() {
		return this.mtbs;
	}

	// --- DATABASE MAPPING : RepairCostByVendor (bit)
	public void setRepaircostbyvendor(Boolean repaircostbyvendor) {
		this.repaircostbyvendor = repaircostbyvendor;
	}

	public Boolean getRepaircostbyvendor() {
		return this.repaircostbyvendor;
	}

	// --- DATABASE MAPPING : RepairCostByLocation (bit)
	public void setRepaircostbylocation(Boolean repaircostbylocation) {
		this.repaircostbylocation = repaircostbylocation;
	}

	public Boolean getRepaircostbylocation() {
		return this.repaircostbylocation;
	}

	// --- DATABASE MAPPING : EquipmentInRepair (bit)
	public void setEquipmentinrepair(Boolean equipmentinrepair) {
		this.equipmentinrepair = equipmentinrepair;
	}

	public Boolean getEquipmentinrepair() {
		return this.equipmentinrepair;
	}

	// --- DATABASE MAPPING : CauseOfFailure (bit)
	public void setCauseoffailure(Boolean causeoffailure) {
		this.causeoffailure = causeoffailure;
	}

	public Boolean getCauseoffailure() {
		return this.causeoffailure;
	}

	// --- DATABASE MAPPING : CostSavings (bit)
	public void setCostsavings(Boolean costsavings) {
		this.costsavings = costsavings;
	}

	public Boolean getCostsavings() {
		return this.costsavings;
	}

	// --- DATABASE MAPPING : RawRepairData (bit)
	public void setRawrepairdata(Boolean rawrepairdata) {
		this.rawrepairdata = rawrepairdata;
	}

	public Boolean getRawrepairdata() {
		return this.rawrepairdata;
	}

	// --- DATABASE MAPPING : StockLevel (bit)
	public void setStocklevel(Boolean stocklevel) {
		this.stocklevel = stocklevel;
	}

	public Boolean getStocklevel() {
		return this.stocklevel;
	}

	// --- DATABASE MAPPING : TransferLog (bit)
	public void setTransferlog(Boolean transferlog) {
		this.transferlog = transferlog;
	}

	public Boolean getTransferlog() {
		return this.transferlog;
	}

	// --- DATABASE MAPPING : RepairStatus (bit)
	public void setRepairstatus(Boolean repairstatus) {
		this.repairstatus = repairstatus;
	}

	public Boolean getRepairstatus() {
		return this.repairstatus;
	}

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(profileid);
		sb.append(inservicespare);
		sb.append("|");
		sb.append(warrantystatus);
		sb.append("|");
		sb.append(failureunderwarranty);
		sb.append("|");
		sb.append(mtbs);
		sb.append("|");
		sb.append(repaircostbyvendor);
		sb.append("|");
		sb.append(repaircostbylocation);
		sb.append("|");
		sb.append(equipmentinrepair);
		sb.append("|");
		sb.append(causeoffailure);
		sb.append("|");
		sb.append(costsavings);
		sb.append("|");
		sb.append(rawrepairdata);
		sb.append("|");
		sb.append(stocklevel);
		sb.append("|");
		sb.append(transferlog);
		sb.append("|");
		sb.append(repairstatus);
		return sb.toString();
	}
}